---
import Base from "../layouts/base.astro";
import PageTitle from "../components/page_title.astro";
import BlogListItem from "../components/blog_list_item.astro";
import BlogList from "../components/blog_list.astro";
import TagList from "../components/tag_list.astro";
import { getCollection } from "astro:content";

const pageHeader = "ls /blog";
const pageTitle = "Blog";
const allBlogPosts = await getCollection("blog");
const sortedPosts = allBlogPosts.sort((a, b) => Date.parse(b.data.publishDate) - Date.parse(a.data.publishDate));
---

<Base title={pageTitle}>
<div class="flex items-baseline justify-between reset-a">
    <PageTitle title={pageHeader} />
    <div id="rss-btn" class="cursor-pointer whitespace-nowrap">
        <input type="text" value="https://shounakdas.netlify.app/rss.xml" id="copy-text" class="hidden">
        <div class="bg-slate-800 text-slate-500 hover:text-teal-400 transition duration-300 ease-in-out rounded px-2 py-1">
            <i id="rss-icon" class="fa-sm fa-solid fa-rss"></i>
            <h3 id="rss-btn-text" class="inline-block">RSS</h3>
        </div>
    </div>
</div>
<!-- List all blogs -->
<div class="-mt-10 space-y-4">
    <p>Filter by topic:<p>
    <ul class="flex flex-wrap mb-10 gap-x-2 gap-y-5">
        <TagList classList="" />
    </ul>
</div>
<hr class="mt-5 mb-8 border-teal-800/40">
<div class="grow px-2">
    <BlogList>
    {
    sortedPosts
    .map((post) => (
    <BlogListItem
    url={post.id}
    title={post.data.title}
    date={post.data.publishDate.toUTCString().slice(4, 16)}
    tags={post.data.tags}
    />
    ))
    }
    </BlogList>
</div>
</Base>

<script>
    // Script to copy RSS link to clipboard
    const rssBtn = document.getElementById("rss-btn");
    const rssBtnText = document.getElementById("rss-btn-text");
    const rssBtnIcon = document.getElementById("rss-icon");
    const copy = () => {
        const copyText = document.getElementById("copy-text") as HTMLInputElement;
        try {
            copyText.select();
            copyText.setSelectionRange(0, 99999);
            navigator.clipboard.writeText(copyText.value);
            console.log("Copied text to clipboard");
            changeText();
        } catch(e) {
            console.error("Failed to copy text:\n", e);
        }
    };
    const changeText = () => {
        const currText = rssBtnText.innerHTML;
        rssBtnText.innerHTML = "Copied!";

        setTimeout(() => {
            rssBtnText.innerHTML = currText;
        }, 3000);
    };

    rssBtn.addEventListener("click", copy);
</script>
